#
# python.yaml
# Created by Perry Naseck on 6/28/21.
#
# Copyright (c) 2021, The CONIX Research Center
# All rights reserved.
#
# This source code is licensed under the BSD-3-Clause license found in the
# LICENSE file in the root directory of this source tree.
#

name: Python
on: [push, pull_request]

jobs:
  build-python-sdist:
    name: Build Source Distribution
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.10"
      - name: Install Python build tool
        run: python -m pip install build
      - name: Build sdist
        run: python -m build --sdist --outdir dist/
      - name: Display structure of dist files
        run: ls -R
        working-directory: dist
      - name: SHA256 files
        run: find . -type f -exec sha256sum {} \;
        working-directory: dist
      - uses: actions/upload-artifact@v3
        with:
          name: python-dist
          path: dist/*.tar.gz
  install-python-sdist:
    name: 'Install Source Distribution (${{ matrix.python-version }}-${{ matrix.os }})'
    needs: [build-python-sdist]
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-20.04, python-version: "3.10" }
          - { os: windows-2022, python-version: "3.10" }
          - { os: macos-11,  python-version: "3.10" }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download python-dist artifact
        uses: actions/download-artifact@v3
        with:
          name: python-dist
          path: dist/
      - name: SHA256 files
        shell: bash
        run: find . -type f -exec sha256sum {} \;
        working-directory: dist
      - uses: actions/setup-python@v4
        name: Install Python ${{ matrix.python-version }}
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install sdist
        shell: bash
        run: python -m pip install dist/*.tar.gz
  build-python-wheel:
    name: Build Wheel ${{ matrix.python-version }}-${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-20.04, arch: manylinux_x86_64,  python-version: cp38  }
          - { os: ubuntu-20.04, arch: manylinux_x86_64,  python-version: cp39  }
          - { os: ubuntu-20.04, arch: manylinux_x86_64,  python-version: cp310 }
          # - { os: ubuntu-20.04, arch: musllinux_x86_64,  python-version: cp39  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: musllinux_x86_64,  python-version: cp310 } # no numpy wheel
          - { os: ubuntu-20.04, arch: manylinux_x86_64,  python-version: pp38  }
          # - { os: ubuntu-20.04, arch: manylinux_x86_64,  python-version: pp39  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_i686,    python-version: cp38  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_i686,    python-version: cp39  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_i686,    python-version: cp310 } # no numpy wheel
          # - { os: ubuntu-20.04, arch: musllinux_i686,    python-version: cp39  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: musllinux_i686,    python-version: cp310 } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_i686,    python-version: pp38  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_i686,    python-version: pp39  } # no numpy wheel
          - { os: ubuntu-20.04, arch: manylinux_aarch64, python-version: cp38  }
          - { os: ubuntu-20.04, arch: manylinux_aarch64, python-version: cp39  }
          - { os: ubuntu-20.04, arch: manylinux_aarch64, python-version: cp310 }
          # - { os: ubuntu-20.04, arch: musllinux_aarch64, python-version: cp39  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: musllinux_aarch64, python-version: cp310 } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_aarch64, python-version: pp38  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_aarch64, python-version: pp39  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_ppc64le, python-version: cp38  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_ppc64le, python-version: cp39  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_ppc64le, python-version: cp310 } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_s390x,   python-version: cp38  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_s390x,   python-version: cp39  } # no numpy wheel
          # - { os: ubuntu-20.04, arch: manylinux_s390x,   python-version: cp310 } # no numpy wheel
          - { os: windows-2022, arch: win_amd64,         python-version: cp38  }
          - { os: windows-2022, arch: win_amd64,         python-version: cp39  }
          - { os: windows-2022, arch: win_amd64,         python-version: cp310 }
          - { os: windows-2022, arch: win_amd64,         python-version: pp38  }
          # - { os: windows-2022, arch: win_amd64,         python-version: pp39  } # no numpy wheel
          # - { os: windows-2022, arch: win_arm64,         python-version: cp39  } # no numpy wheel
          # - { os: windows-2022, arch: win_arm64,         python-version: cp310 } # no numpy wheel
          - { os: windows-2022, arch: win32,             python-version: cp38  }
          - { os: windows-2022, arch: win32,             python-version: cp39  }
          - { os: windows-2022, arch: win32,             python-version: cp310 }
          - { os: macos-11,     arch: macosx_x86_64,     python-version: cp38  }
          - { os: macos-11,     arch: macosx_x86_64,     python-version: cp39  }
          - { os: macos-11,     arch: macosx_x86_64,     python-version: cp310 }
          - { os: macos-11,     arch: macosx_x86_64,     python-version: pp38  }
          # - { os: macos-11,     arch: macosx_x86_64,     python-version: pp39  } # no numpy wheel
          - { os: macos-11,     arch: macosx_arm64,      python-version: cp38  }
          - { os: macos-11,     arch: macosx_arm64,      python-version: cp39  }
          - { os: macos-11,     arch: macosx_arm64,      python-version: cp310 }
          - { os: macos-11,     arch: macosx_universal2, python-version: cp38  }
          - { os: macos-11,     arch: macosx_universal2, python-version: cp39  }
          - { os: macos-11,     arch: macosx_universal2, python-version: cp310 }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        if: runner.os == 'Linux' && matrix.arch != 'manylinux_x86_64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up coreutils (for sha256sum)
        if: runner.os == 'macOS'
        shell: bash
        run: env HOMEBREW_NO_AUTO_UPDATE=1 brew install coreutils
      - name: Build Wheel
        uses: pypa/cibuildwheel@v2.8.1
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: ${{ matrix.python-version }}-${{ matrix.arch }}
          CIBW_ARCHS: 'all'
      - name: Display structure of wheelhouse files
        run: ls -R
        working-directory: wheelhouse
      - name: SHA256 files
        shell: bash
        run: find . -type f -name "*.whl" -exec sha256sum {} \;
        working-directory: wheelhouse
      - uses: actions/upload-artifact@v3
        # Some QEMU+Cython float precision issue, so do not upload/bundle artifact for now
        # Just want to be sure builds and runs without error
        # UPDATE: Use them for now; want to support new Pi aarch64 OS
        # if: matrix.arch != 'manylinux_i686' && matrix.arch != 'manylinux_aarch64'
        with:
          name: python-dist
          path: ./wheelhouse/*.whl
  publish-python:
    name: Publish distributions to PyPI
    needs: [build-python-sdist, build-python-wheel]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    env:
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - name: Download python-dist artifact
      uses: actions/download-artifact@v3
      with:
        name: python-dist
        path: dist/
    - name: Display structure of dist files
      run: ls -R
      working-directory: dist
    - name: Publish distribution to PyPI
      if: env.PYPI_API_TOKEN != null
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
  publish-release-artifacts:
    name: Publish Release Artifacts to GitHub
    needs: [build-python-sdist, build-python-wheel]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v3
    - name: Download Python artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-dist
        path: python-dist/
    - name: Display structure of python-dist files
      run: ls -R
      working-directory: python-dist
    - name: Archive python-dist
      run:  >
        tar -czvf python-dist-arena-robot-${GITHUB_REF##*/}-all.tar.gz -C python-dist . &&
        (cd python-dist; for f in *.tar.gz; do cp "$f" "../python-sdist-$f"; done; cd ../)
    - name: SHA256 files
      run: find . -type f -name "*.tar.gz" -exec sha256sum {} \;
    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: ${{ contains(github.event.ref, '-pre') || contains(github.event.ref, '-alpha') || contains(github.event.ref, '-beta') || contains(github.event.ref, '-rc') || contains(github.event.ref, '-dev') }}
        files: |
          *.tar.gz

